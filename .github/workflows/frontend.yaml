name: Frontend CI/CD

on:
  push:
    branches: [main]
    paths: ['amrutam/frontend/**']
  pull_request:
    branches: [main]
    paths: ['amrutam/frontend/**']

jobs:
  frontend-pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: amrutam/frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd amrutam/frontend
          npm ci

      - name: Lint
        run: |
          cd amrutam/frontend
          npm run lint

      - name: Test
        run: |
          cd amrutam/frontend
          npm run test:ci

      - name: Build Docker image
        if: github.ref == 'refs/heads/main'
        run: |
          cd amrutam/frontend
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha }} .
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest .

      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        if: github.ref == 'refs/heads/main'
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

      - name: Deploy to Kubernetes
        if: github.ref == 'refs/heads/main'
        run: |
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 --decode > kubeconfig
          export KUBECONFIG=kubeconfig
          kubectl set image deployment/frontend frontend=${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha }} -n production
          kubectl rollout status deployment/frontend -n production --timeout=300s
          kubectl get pods -l app=frontend -n production

      - name: Slack Notification
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: "Frontend deployment: ${{ job.status }} (SHA: ${{ github.sha }})"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
